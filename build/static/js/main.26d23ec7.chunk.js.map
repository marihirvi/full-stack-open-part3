{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","onClick","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","value","onChange","type","Filter","filterString","handleFiltering","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","personObject","map","x","window","confirm","personToUpdate","p","newPerson","setTimeout","catch","error","undefined","concat","key","handleRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26d23ec7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, removePerson}) => {\n    return(\n    <div>{person.name} {person.number} <button onClick={removePerson}>remove</button></div>\n    )   \n}\n\nexport default Person","import React from 'react';\n\nconst PersonForm = ({ addPerson, newName, handleNewName, newNumber, handleNewNumber }) => {\n    return (\n        <div>\n            <form onSubmit={addPerson}>\n                <div>\n                    name: <input\n                        value={newName}\n                        onChange={handleNewName}\n                    />\n                </div>\n                <div>\n                    number: <input\n                        value={newNumber}\n                        onChange={handleNewNumber}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import React from 'react';\n\nconst Filter = ({ filterString, handleFiltering }) => {\n    return (\n        <div>\n            <input value={filterString} onChange={handleFiltering} />\n        </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={type}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Person from './components/Person.js';\nimport PersonForm from './components/PersonForm.js';\nimport Filter from './components/Filter.js';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\n\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterString, setFilter] = useState('')\n    const [message, setMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => setPersons(initialPersons))\n    }, [])\n\n    const handleNewName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNewNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFiltering = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        if (persons.map(x => x.name.toLowerCase()).includes(newName.toLowerCase())) {\n            if (window.confirm(`${newName} is already added to phonebook. Update number?`)) {\n                const personToUpdate = persons.filter(p => p.name.toLowerCase() === newName.toLowerCase())[0]\n                personService\n                    .update(personToUpdate.id, { ...personToUpdate, number: newNumber })\n                    .then(newPerson => {\n                        setPersons(persons.map(p => p.name !== newName ? p : { ...p, number: newNumber }))\n                        setMessage(\n                            `The number of ${newPerson.name} was successfully updated.`\n                        )\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000)\n                    })\n                    .catch(error => {\n                        if (error.response !== undefined) {\n                            setErrorMessage(error.response.data.error)\n                            setTimeout(() => {\n                                setErrorMessage(null)\n                            }, 5000)\n                        } else {\n                            setErrorMessage(\n                                `${newName} has already been removed from phonebook`)\n                            setTimeout(() => {\n                                setErrorMessage(null)\n                            }, 5000)\n                            setPersons(persons.filter(p => p.name !== newName))\n                        }\n                    })\n            }\n        } else {\n            personService\n                .create(personObject)\n                .then(newPerson => {\n                    setPersons(persons.concat(newPerson))\n                    setMessage(\n                        `${newPerson.name} was successfully added to phonebook`\n                    )\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setErrorMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleRemove = (id) => {\n        const name = persons.filter(p => p.id === id)[0].name\n        if (window.confirm(`Delete ${name}?`)) {\n            personService\n                .remove(id)\n                .then(response => {\n                    setPersons(persons.filter(p => p.id !== id))\n                    setMessage(\n                        `${name} was successfully removed from phonebook`\n                    )\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setErrorMessage(\n                        `${name} has already been removed from phonebook`\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                    setPersons(persons.filter(p => p.id !== id))\n                })\n        }\n    }\n\n    const personsToShow = filterString === ''\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(filterString.toLowerCase()))\n\n    return (\n        <div>\n            <h1>The Phonebook</h1>\n            <Notification message={message} type=\"success\" />\n            <Notification message={errorMessage} type=\"error\" />\n            <h2>Search by name</h2>\n            <Filter filterString={filterString} handleFiltering={handleFiltering} />\n            <h3>Add person</h3>\n            <PersonForm\n                addPerson={addPerson}\n                newName={newName}\n                handleNewName={handleNewName}\n                newNumber={newNumber}\n                handleNewNumber={handleNewNumber}\n            />\n            <h2>Numbers</h2>\n            <div>\n                {personsToShow.map(person =>\n                    <Person key={person.id} person={person} removePerson={() => handleRemove(person.id)} />\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n"],"sourceRoot":""}